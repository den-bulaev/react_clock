{"version":3,"sources":["Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timer","setInterval","setState","prevProps","oldName","name","newName","props","console","log","clearInterval","React","Component","App","isClockVisible","clockName","setButtonName","Math","random","toFixed","show","hide","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,kBAAM,EAAKC,SAClC,CAAEN,MAAM,IAAIC,MAAOC,yBAClB,OARP,gCAWE,SAAmBK,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUP,KAAKQ,MAAMF,KAG3BG,QAAQC,IAAIV,KAAKJ,MAAMC,MAEnBQ,IAAYE,GAEdE,QAAQC,IAAR,qCACgCL,EADhC,eAC8CE,MArBpD,kCA0BE,WACEI,cAAcX,KAAKC,SA3BvB,oBA8BE,WACE,OACE,oCACGD,KAAKJ,MAAMC,UAjCpB,GAA2Be,IAAMC,WCEpBC,G,MAAb,4MACElB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,gBAHf,EAMEC,cAAgB,kBAAM,EAAKd,SACzB,CAAEa,WAA4B,GAAhBE,KAAKC,UAAeC,QAAQ,MAP9C,EAUEC,KAAO,kBAAM,EAAKlB,SAAS,CAAEY,gBAAgB,KAV/C,EAYEO,KAAO,kBAAM,EAAKnB,SAAS,CAAEY,gBAAgB,KAZ/C,4CAcE,WACE,OACE,yBAAKQ,UAAU,OACb,2CACA,+CAIC,IAEAvB,KAAKJ,MAAMmB,eACV,0BAAMQ,UAAU,cACd,kBAAC,EAAD,CAAOjB,KAAMN,KAAKJ,MAAMoB,aAEvB,KAEL,6BACA,6BAEA,4BACEQ,KAAK,SACLD,UAAU,oBACVE,QAASzB,KAAKJ,MAAMmB,eAAiBf,KAAKsB,KAAOtB,KAAKqB,MAErDrB,KAAKJ,MAAMmB,eAAiB,aAAe,cAG9C,6BACA,6BAEA,4BACES,KAAK,SACLD,UAAU,oBACVE,QAASzB,KAAKiB,eAHhB,+BA5CR,GAAyBL,IAAMC,YCD/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d985213a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.setState(\n      { time: new Date().toLocaleTimeString() },\n    ), 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.time);\n\n    if (oldName !== newName) {\n    // eslint-disable-next-line no-console\n      console.log(\n        `The Clock was renamed from ${oldName} to ${newName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.time}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock/Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'default name',\n  }\n\n  setButtonName = () => this.setState(\n    { clockName: (Math.random() * 10).toFixed(3) },\n  );\n\n  show = () => this.setState({ isClockVisible: true });\n\n  hide = () => this.setState({ isClockVisible: false });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <span>\n          Current time:\n        </span>\n\n        {' '}\n\n        {this.state.isClockVisible ? (\n          <span className=\"App__clock\">\n            <Clock name={this.state.clockName} />\n          </span>\n        ) : (null)}\n\n        <br />\n        <br />\n\n        <button\n          type=\"button\"\n          className=\"App__clock-button\"\n          onClick={this.state.isClockVisible ? this.hide : this.show}\n        >\n          {this.state.isClockVisible ? 'Hide Clock' : 'Show Clock'}\n        </button>\n\n        <br />\n        <br />\n\n        <button\n          type=\"button\"\n          className=\"App__clock-button\"\n          onClick={this.setButtonName}\n        >\n          Set button random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}